@using BlogProject.Services
@using BlogProject.Models
@using Microsoft.AspNetCore.Identity
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common

@inject UserManager<BlogUser> userManager
@inject IImageService imageService

@model IPagedList<Post>

@{
    ViewData["Title"] = "Index";
}





<div class="container-fluid pt-3">
    <div class="container">
        <div class="row">

            @foreach (var post in Model)
            {
                //Is the logged in user the Author of this post??
                var isAdmin = false;
                if (User.Identity.IsAuthenticated)
                {
                    @*isAdmin = User.IsInRole(BlogRole.GuestAuthor.ToString());*@
                    isAdmin = isAdmin && (post.BlogUserId == userManager.GetUserId(User));
                }

                <div class="col-sm-12 col-md-6 col-lg-6 mt-4">
                    <div class="card">
                        <div class="card-body text-center bg-secondary">
                            <div class="bg">

                                <h5 class="card-title">@post.Title</h5>

                            </div>
                            <div>
                                <p class="card-text">@post.Abstract</p>
                            </div>

                            <br />
                            <div class="text-center">
                                <a class="btn btn-dark btn-sm btn-block mb-2" asp-action="Details" asp-controller="Posts" asp-route-slug="@post.Slug">Read More</a>
                            </div>
                            @*
                        @if (User.IsInRole(BlogRole.Administrator.ToString()) || isAuthor)
                        {
                        <div class="text-center">
                        <a class="btn btn-success btn-sm btn-block border-dark" asp-action="Edit" asp-controller="Posts" asp-route-id="@post.Id">Edit Post</a>
                        </div>
                        }*@
                        </div>

                        <div class="position-relative">

                            <img class="img-fluid" src="@imageService.DecodeImage(post.ImageData,  post.ContentType)" alt="">

                        </div>
                    </div>
                </div>
            }
        </div>

    </div>
</div>
<hr />


<div class="row">
    <div class="col h3">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    </div>
</div>
<div class="row">
    <div class="col">
        @Html.PagedListPager(Model, page => Url.Action("BlogPostIndex", new { id = Model.FirstOrDefault().BlogId, page = page }),
        new PagedListRenderOptionsBase
        {
        LiElementClasses = new string[] { "page-item" },
        PageClasses = new string[] { "page-link" }
        })
    </div>
</div>