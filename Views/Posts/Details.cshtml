@using BlogProject.Enums
@using BlogProject.Models
@using BlogProject.Services
@using BlogProject.ViewModels
@using Microsoft.AspNetCore.Identity

@inject IImageService imageService
@inject UserManager<BlogUser> userManager
@model PostDetailViewModel

<article>
    <div class="row">
        <div class="col-12">
            <div class="mb-3" style="padding: 30px; text-align: center">
                @Html.Raw(Model.Post.Content)
            </div>
        </div>

        @*   <div class="col-3 text-center font-weight-bold h6">
        <div class="card">
        <img class="card-img-top" src="/images/blog-2.jpg" alt="Tags...">
        <div class="card-body">
        <h4 class="card-title">SYSTEM TAGS</h4>
        <div class="tagView">
        @foreach (var tag in Model.Tags)
        {
        <a asp-action="TagIndex" asp-route-tag="@tag" class="mb-1 btn btn-sm btn-warning btn-outline-dark">#@tag</a>
        }
        </div>
        </div>
        </div>
        </div>*@
    </div>

</article>

<article>
    <hr />
    <h3 class="text-center font-weight-bold">Tags</h3>
    <div class="col text-center">
        @foreach (var tag in Model.Post.Tags.ToList())
        {
            <a class="btn btn-primary btn-sm">#@tag.Text</a>
            @* <a asp-action="TagIndex" asp-route-tag="@tag.Text.ToLower()" class="btn btn-primary btn-sm">#@tag.Text</a>*@
        }
    </div>
    <hr />
</article>


<div>
    @if (User.Identity.IsAuthenticated)
    {
        <form asp-action="Create" asp-controller="Comments" method="post">
            @Html.Hidden("PostId", Model.Post.Id)
            @Html.Hidden("Slug", Model.Post.Slug)

            <div class="form-group">
                <label class="control-label font-weight-bold">Add Comment</label>
                <textarea name="body" class="form-control" rows="2"></textarea>
            </div>

            <button type="submit" class="btn btn-dark btn-sm">Submit</button>
        </form>
    }
    else
    {
        <a class="btn btn-block btn-sm btn-dark" asp-area="Identity" asp-page="/Account/Login">
            Login to add comments
        </a>
    }

    <br />
    <hr class="card-hr" />
    <br />

    <a id="commentSection" class="btn btn-sm btn-dark">@Model.Post.Comments.Count Comments(S)</a>

    @{
        var counter = 0;
    }
    @foreach (var comment in Model.Post.Comments.OrderByDescending(c => c.Created))
    {
        <div class="bg-light">
            <img src="@imageService.DecodeImage(comment.BlogUser.ImageData, comment.BlogUser.ContentType)" alt="Image" class="img-fluid mr-3 mt-1 rounded-circle" style="width: 45px;">

            <div class="media-body">
                <h4>@comment.BlogUser.FullName</h4>

                @****************************************************************
            SECTION 1: POST ON OR UPDATED ON
            *****************************************************************@
                @if (comment.Deleted is not null)
                {
                    <span class="small">
                        <span class="font-weight-bolder">Deleted</span> : @comment.Deleted?.ToString("MMM dd, yyyy")
                    </span>
                }
                else if (comment.Moderated is not null)
                {
                    <span class="small">
                        <span class="font-weight-bolder">
                            Moderated <span class="text-danger font-italic">(@comment.ModerationType.ToString().ToLower())</span>
                        </span>
                        : @comment.Moderated?.ToString("MMM dd, yyyy")
                    </span>
                }
                else if (comment.Updated is not null)
                {
                    <span class="small">
                        <span class="font-weight-bolder">Updated </span> : @comment.Updated?.ToString("MMM dd, yyyy")
                    </span>
                }
                else
                {
                    <span class="small">
                        <span class="font-weight-bolder">Created </span> : @comment.Created.ToString("MMM dd, yyyy")
                    </span>
                }

                @*****************************************************************
            SECTION 2: HOW DO WE COMPOSE THE BODY
            *****************************************************************@
                @*****************************************************************
            SECTION 2A: Render pre text
            *****************************************************************@
                <br />
                @if (comment.Deleted is not null)
                {
                    <span class="small font-italic">The comment posted on @comment.Created.ToString("MMM dd, yyyy") by @comment.BlogUser.FullName was deleted by the Moderator...</span>
                }
                else if (comment.Moderated is not null)
                {
                    <span class="small font-italic">The comment posted on @comment.Created.ToString("MMM dd, yyyy") by @comment.BlogUser.FullName has been Moderated...</span>
                }

                <hr />

                @*****************************************************************
            SECTION 2B: Render main body
            *****************************************************************@
                @if (string.IsNullOrEmpty(comment.Body))
                {
                    <span class="small font-italic">Comment not available...</span>
                }
                else if (comment.Moderated is not null)
                {
                    @comment.ModeratedBody
                }
                else if (comment.Deleted is null)
                {
                    @comment.Body
                }


                @****************************************************************
            SECTION 3: CAN WE RENDER THE EDIT BUTTON
            *****************************************************************@
                @if (comment.Moderated is null && comment.Deleted is null && comment.BlogUserId == userManager.GetUserId(User))
                {
                    <hr class="border-4">
                    <button data-toggle="modal" data-target="#editModal" class="btn btn-primary font-weight-bold">Edit</button>
                }

                @****************************************************************
            SECTION 4: CAN WE RENDER THE MODERATE AND DELETE BUTTONS
            *****************************************************************@
                @if (User.IsInRole(BlogRole.Moderator.ToString()) || User.IsInRole(nameof(BlogRole.Administrator))  && comment.Deleted is null)
                {
                    <hr>
                    <div class="row">
                        <div class="col-2">
                            <button class="btn btn-primary font-weight-bold btn-block" data-toggle="modal" data-target="#moderate">Moderate</button>
                        </div>
                        <div class="col-2">
                            <form asp-action="DeleteConfirmed" asp-controller="Comments">
                                @Html.Hidden("CommentId", comment.Id)
                                @Html.Hidden("Slug", comment.Post.Slug)
                                <button class="btn btn-danger ">Delete</button>
                            </form>
                        </div>
                    </div>
                }

            </div>

        </div>



        @*Modals*@
        <div class="modal" id="editModal">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title">Editing Comment...</h4>

                    </div>

                    <!-- Modal body -->
                    <div class="modal-body">
                        <form asp-action="Edit" asp-controller="Comments">
                            @Html.Hidden("Id", comment.Id)

                            <div class="form-group">
                                <textarea name="Body" class="form-control" required>@comment.Body</textarea>
                            </div>

                            <button class="btn btn-primary font-weight-bold" type="submit">Submit</button>

                            <button type="button" class="btn btn-warning font-weight-bold" data-dismiss="modal">Close</button>
                        </form>
                    </div>

              
                </div>
            </div>
        </div>


        <div class="modal" id="moderate">
            <div class="modal-dialog">
                <div class="modal-content">

                    <!-- Modal Header -->
                    <div class="modal-header">
                        <h4 class="modal-title">Moderating Comment...</h4>

                    </div>

                    <!-- Modal body -->
                    <div class="modal-body">
                        <form asp-action="Moderate" asp-controller="Comments">
                            @Html.Hidden("Id", comment.Id)
                            @Html.Hidden("Body", comment.Body)

                            <div class="form-group">
                                <label class="control-label">Original Comment</label>
                                <textarea disabled class="form-control" style="resize:none">@comment.Body</textarea>
                            </div>

                            <div class="form-group">
                                <label class="control-label">Moderated Comment</label>
                                <textarea required name="ModeratedBody" class="form-control">@comment.ModeratedBody</textarea>
                            </div>

                            <div class="form-group">
                                <label class="control-label">Reason For Moderation</label>
                                <select class="form-control" asp-for="@comment.ModerationType" name="ModerationType" asp-items="Html.GetEnumSelectList<ModerationType>()"></select>
                            </div>

                            <div class="form-group">
                                <div class="row">
                                    <div class="col">
                                        <button class="btn btn-primary font-weight-bold " type="submit">Submit</button>
                                    </div>
                                    <div class="col">
                                        <button class="btn btn-warning font-weight-bold" type="button" data-dismiss="modal">Close</button>
                                    </div>
                                </div>
                            </div>

                        </form>
                    </div>
                </div>
            </div>
        </div>
        counter++;
    }
</div>
